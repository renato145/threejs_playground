(this.webpackJsonpthree_js_playground=this.webpackJsonpthree_js_playground||[]).push([[0],{223:function(e,t,a){e.exports=a(399)},397:function(e,t,a){},399:function(e,t,a){"use strict";a.r(t);var n=a(1),r=a.n(n),c=a(41),o=a.n(c),l=a(34),u=a(120),i=a(49),m=a(35),s=a(8),f=a(12),b=a(27);function h(){var e=Object(l.a)(["\n  color: #fff;\n  font-size: 1.2em;\n  text-align: center;\n  padding-top: 0.5em;\n"]);return h=function(){return e},e}function d(){var e=Object(l.a)(["\n  height: 90vh;\n  width: 100vw;\n  & canvas:focus {\n    outline-width: 0px;\n  }\n"]);return d=function(){return e},e}var p=m.a.div(d()),v=m.a.div(h()),g=function(e){var t=e.text,a=e.children,n=e.xtra;return r.a.createElement(p,null,r.a.createElement(f.a,null,r.a.createElement("ambientLight",null),r.a.createElement("pointLight",{position:[10,10,10]}),a,r.a.createElement(b.b,null)),n&&n,t&&r.a.createElement(v,null,t))},E=function(){var e=Object(n.useRef)(),t=Object(n.useState)(!1),a=Object(s.a)(t,2),c=a[0],o=a[1];return Object(f.d)((function(){return e.current.rotation.x=e.current.rotation.y+=.01})),r.a.createElement("mesh",{ref:e,scale:c?[1.5,1.5,1.5]:[1,1,1],onPointerOver:function(){return o(!0)},onPointerOut:function(){return o(!1)}},r.a.createElement("boxBufferGeometry",{attach:"geometry",args:[2,2,2]}),r.a.createElement("meshStandardMaterial",{attach:"material",color:c?"hotpink":"orange"}),r.a.createElement(b.a,null))},j=function(){return r.a.createElement(g,{text:"Simple box geometry with hover event."},r.a.createElement(E,null))},y=a(0),O=a(20),x=101,w=function(e,t){for(var a=t*e,n=new Array(t*e),r=new Array(t*e),c=new Array(t*e),o=0,l=0;o<e;++o)for(var u=0;u<t;++u,++l)r[l]=u,c[l]=25*Math.sin(u*Math.PI/50)+o,n[l]=Math.pow(r[l]-50,2)+Math.pow(c[l]-50,2);return{xgrid:r,ygrid:c,values:n,nverts:a}}(101,x),S=w.xgrid,M=w.ygrid,z=w.values,A=w.nverts,P=Object(O.b)(S),G=Object(s.a)(P,2),_=G[0],F=G[1],U=.5*(_+F),B=F-_,C=Object(O.b)(M),k=Object(s.a)(C,2),D=k[0],I=k[1],R=.5*(D+I),T=I-D,V=Object(O.b)(z),N=Object(s.a)(V,2),H=N[0],J=N[1],L=.5*(H+J),q=J-H,K=1.2/Math.max(B,T),Q=.5/q,W=Object(O.d)().domain(Object(O.b)(z)).interpolate((function(){return O.c})),X=function(){var e=Object(n.useMemo)((function(){for(var e=[],t=[],a=0;a<A;a++){e.push((S[a]-U)*K),e.push((M[a]-R)*K),e.push((z[a]-L)*Q);var n=Object(O.a)(W(z[a]));t.push(n.r/255,n.g/255,n.b/255)}return[new Float32Array(e),new Float32Array(t)]}),[]),t=Object(s.a)(e,2),a=t[0],c=t[1],o=Object(n.useMemo)((function(){for(var e=[],t=0;t<100;t++)for(var a=0;a<100;a++){var n=t*x+a,r=n+1,c=(t+1)*x+a+1,o=c-1;e.push(n,r,c),e.push(c,o,n)}return new Uint16Array(e)}),[]);return r.a.createElement("mesh",{"rotation-x":-Math.PI/2,scale:[4,4,4]},r.a.createElement("bufferGeometry",{attach:"geometry",onUpdate:function(e){console.log(e),e.computeFaceNormals(),e.computeVertexNormals()}},r.a.createElement("bufferAttribute",{attachObject:["attributes","position"],count:a.length/3,array:a,itemSize:3}),r.a.createElement("bufferAttribute",{attachObject:["attributes","color"],count:c.length/3,array:c,itemSize:3}),r.a.createElement("bufferAttribute",{attach:"index",count:o.length,array:o,itemSize:1})),r.a.createElement("meshPhongMaterial",{attach:"material",side:y.DoubleSide,vertexColors:!0}),r.a.createElement(b.a,null))},Y=function(){return r.a.createElement(g,{text:"Surface plot using vertex and faces, colored with d3."},r.a.createElement(X,null))},Z=function(e,t){for(var a=t*e,n=new Array(t*e),r=new Array(t*e),c=new Array(t*e),o=0,l=0;o<e;++o)for(var u=0;u<t;++u,++l)r[l]=u,c[l]=25*Math.sin(u*Math.PI/50)+o,n[l]=Math.pow(r[l]-50,2)+Math.pow(c[l]-50,2);return{xgrid:r,ygrid:c,values:n,nverts:a}}(101,101),$=Z.xgrid,ee=Z.ygrid,te=Z.values,ae=Z.nverts,ne=Object(O.b)($),re=Object(s.a)(ne,2),ce=re[0],oe=re[1],le=.5*(ce+oe),ue=oe-ce,ie=Object(O.b)(ee),me=Object(s.a)(ie,2),se=me[0],fe=me[1],be=.5*(se+fe),he=fe-se,de=Object(O.b)(te),pe=Object(s.a)(de,2),ve=pe[0],ge=pe[1],Ee=.5*(ve+ge),je=ge-ve,ye=1.2/Math.max(ue,he),Oe=.5/je,xe=Object(O.d)().domain(Object(O.b)(te)).interpolate((function(){return O.c})),we=function(){var e=Object(n.useMemo)((function(){for(var e=[],t=[],a=0;a<ae;a++){e.push(($[a]-le)*ye),e.push((ee[a]-be)*ye),e.push((te[a]-Ee)*Oe);var n=Object(O.a)(xe(te[a]));t.push(n.r/255,n.g/255,n.b/255)}return[new Float32Array(e),new Float32Array(t)]}),[]),t=Object(s.a)(e,2),a=t[0],c=t[1],o=Object(n.useMemo)((function(){for(var e=[],t=0;t<100;t++)for(var a=0;a<100;a++){var n=101*t+a,r=n+1,c=101*(t+1)+a+1,o=c-1;e.push(n,r,c),e.push(c,o,n)}return new Uint16Array(e)}),[]),l=Object(n.useMemo)((function(){return{vertexShader:"\n  varying float z;\n\n  void main() {\n    vec3 pos = position;\n    z = 0.41 + pos.z*1.5;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n  }\n",fragmentShader:"\n  varying float z;\n  \n  void main() {\n    gl_FragColor = vec4(z, cos(z*200.0), cos(z*100.0), 1.0);\n  }\n"}}),[]);return r.a.createElement("mesh",{"rotation-x":-Math.PI/2,scale:[4,4,4]},r.a.createElement("bufferGeometry",{attach:"geometry",onUpdate:function(e){console.log(e),e.computeFaceNormals(),e.computeVertexNormals()}},r.a.createElement("bufferAttribute",{attachObject:["attributes","position"],count:a.length/3,array:a,itemSize:3}),r.a.createElement("bufferAttribute",{attachObject:["attributes","color"],count:c.length/3,array:c,itemSize:3}),r.a.createElement("bufferAttribute",{attach:"index",count:o.length,array:o,itemSize:1})),r.a.createElement("shaderMaterial",Object.assign({attach:"material"},l,{side:y.DoubleSide})),r.a.createElement(b.a,null))},Se=function(){return r.a.createElement(g,{text:"Surface plot using vertex and faces, colored with a custom fragment shader."},r.a.createElement(we,null))},Me=a(21);function ze(){var e=Object(l.a)([""]);return ze=function(){return e},e}m.a.input.attrs((function(e){return{type:"range"}}))(ze());var Ae=function(){var e=Object(n.useRef)(),t=Object(n.useRef)(),a=Object(n.useMemo)((function(){return{vertexShader:"\n  attribute float displacement;\n  varying float z;\n\n  void main() {\n    vec3 pos = position;\n    z = pos.z;\n    pos.x += (displacement/1.0);\n    // pos.y += cos(displacement/2.0);\n    // pos.y += fract(displacement/2.0);\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n  }\n",fragmentShader:"\n  uniform float delta;\n  varying float z;\n  \n  void main() {\n    gl_FragColor = vec4(z*0.5, 0.5 + cos(delta)*0.25, sin(delta), 1.0);\n  }\n",uniforms:{delta:{value:0}}}}),[]),c=Object(n.useState)(),o=Object(s.a)(c,2),l=o[0],u=o[1],i=Object(n.useCallback)((function(e){if(!l){var t=e.attributes.position.count,a=new Float32Array(t);u(a)}}),[l]),m=Object(Me.b)("Color speed",{type:"number",value:.1,max:10}),h=Object(Me.b)("Distortion lvl",{type:"number",value:0,max:1});return Object(f.d)((function(){e.current.rotation.x=e.current.rotation.y+=.01,a.uniforms.delta.value+=m;for(var n=0;n<l.length;n++)l[n]=Math.random()*h;t.current.attributes.displacement.needsUpdate=!0})),r.a.createElement("mesh",{ref:e},r.a.createElement("boxBufferGeometry",{ref:t,attach:"geometry",args:[3,3,3],onUpdate:function(e){return i(e)}},l&&r.a.createElement("bufferAttribute",{attachObject:["attributes","displacement"],count:l.length,array:l,itemSize:1})),r.a.createElement("shaderMaterial",Object.assign({attach:"material"},a)),r.a.createElement(b.a,null))},Pe=function(){return r.a.createElement(g,{text:"Testing the use of shaders.",xtra:r.a.createElement(Me.a,null)},r.a.createElement(Ae,null))},Ge=a(23),_e=function(){var e=Object(n.useRef)(),t=Object(Me.b)("width",{type:"number",value:5,min:1,max:10}),a=Object(Me.b)("height",{type:"number",value:5,min:1,max:10}),c=Object(Me.b)("width segments",{type:"number",value:10,min:2,max:100}),o=Object(Me.b)("height segments",{type:"number",value:10,min:2,max:100}),l=Object(Me.b)("max elevation",{type:"number",value:.25,min:0,max:2}),u=Object(Me.b)("wireframe",{type:"boolean",value:!1}),i=Object(n.useState)([]),m=Object(s.a)(i,2),f=m[0],h=m[1],d=Object(n.useCallback)((function(e){for(var t=e.attributes.position.array,a=0;a<t.length;a++)a%3===2&&(t[a]=Math.random()*l);if(f&&f.length===t.length)e.setAttribute("color",new y.Float32BufferAttribute(f,3));else{var n=Object(Ge.a)(t.filter((function(e,t){return t%3===2}))),r=Object(O.d)().domain(Object(O.b)(n)).interpolate((function(){return O.c})),c=[];n.forEach((function(e){var t=Object(O.a)(r(e));c.push(t.r/255,t.g/255,t.b/255)})),h((function(){return e.setAttribute("color",new y.Float32BufferAttribute(c,3)),c}))}}),[f,l]);return Object(n.useEffect)((function(){d(e.current),e.current.attributes.position.needsUpdate=!0}),[l,d]),r.a.createElement("mesh",{"rotation-x":-Math.PI/2,"position-y":-1.5},r.a.createElement("planeBufferGeometry",{ref:e,attach:"geometry",args:[t,a,c,o],onUpdate:function(e){return d(e)}}),r.a.createElement("meshPhongMaterial",{attach:"material",side:y.DoubleSide,wireframe:u,vertexColors:!0}),r.a.createElement(b.a,null))},Fe=function(){return r.a.createElement(g,{text:"Using a plane buffer geometry to show a surface plot, with colors given by d3.",xtra:r.a.createElement(Me.a,null)},r.a.createElement(_e,null))},Ue=function(){var e=Object(n.useRef)(),t=Object(Me.b)("width",{type:"number",value:5,min:1,max:10}),a=Object(Me.b)("height",{type:"number",value:5,min:1,max:10}),c=Object(Me.b)("width segments",{type:"number",value:10,min:2,max:100}),o=Object(Me.b)("height segments",{type:"number",value:10,min:2,max:100}),l=Object(Me.b)("max elevation",{type:"number",value:.35,min:0,max:2}),u=Object(Me.b)("wireframe",{type:"boolean",value:!1}),i=Object(n.useCallback)((function(e){for(var t=e.attributes.position.array,a=0;a<t.length;a++)a%3===2&&(t[a]=Math.random()*l)}),[l]);Object(n.useEffect)((function(){i(e.current),e.current.attributes.position.needsUpdate=!0}),[l,i]);var m=Object(n.useMemo)((function(){return{vertexShader:"\n  varying float z;\n\n  void main() {\n    vec3 pos = position;\n    z = pos.z;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n  }\n",fragmentShader:"\n  varying float z;\n  \n  void main() {\n    gl_FragColor = vec4(z, 0.1, 0.3, 1.0);\n  }\n"}}),[]);return r.a.createElement("mesh",{"rotation-x":-Math.PI/2,"position-y":-1.5},r.a.createElement("planeBufferGeometry",{ref:e,attach:"geometry",args:[t,a,c,o],onUpdate:function(e){return i(e)}}),r.a.createElement("shaderMaterial",Object.assign({attach:"material"},m,{side:y.DoubleSide,wireframe:u})),r.a.createElement(b.a,null))},Be=function(){return r.a.createElement(g,{text:"Using a plane buffer geometry to show a surface plot, with colors given by a fragment shader.",xtra:r.a.createElement(Me.a,null)},r.a.createElement(Ue,null))};a(397);function Ce(){var e=Object(l.a)(["\n  color: #fff;\n  font-size: 1.2em;\n  text-align: center;\n  padding-top: 3em;\n"]);return Ce=function(){return e},e}function ke(){var e=Object(l.a)(["\n  color: #fff;\n  font-size: 2em;\n  text-align: center;\n  padding-top: 2em;\n"]);return ke=function(){return e},e}function De(){var e=Object(l.a)(["\n  position: absolute;\n  display: flex;\n  flex-wrap: wrap;\n  flex-flow: column;\n  justify-content: space-between;\n  padding-left: 1rem;\n  padding-right: 0rem;\n  padding-top: 3rem;\n  z-index: 100;\n\n  & > div {\n    padding-bottom: 0.5rem;\n  }\n"]);return De=function(){return e},e}function Ie(){var e=Object(l.a)(["\n  color: #abc;\n  font-size: 1rem;\n  &.active {\n    color: #fff;\n  }\n"]);return Ie=function(){return e},e}function Re(){var e=Object(l.a)(["\n  color: #abc;\n  font-size: 1rem;\n  &.active {\n    color: #fff;\n  }\n"]);return Re=function(){return e},e}var Te="threejs_playground",Ve=Object(m.a)(u.b).attrs((function(e){return{exact:!0}}))(Re()),Ne=m.a.a(Ie()),He=m.a.div(De()),Je=m.a.div(ke()),Le=m.a.div(Ce()),qe=function(){return r.a.createElement(u.a,null,r.a.createElement(He,null,r.a.createElement("div",null,r.a.createElement(Ve,{to:"/".concat(Te,"/")},"Home")),r.a.createElement("div",null,r.a.createElement(Ve,{to:"/".concat(Te,"/BoxGeometry")},"BoxGeometry")),r.a.createElement("div",null,r.a.createElement(Ve,{to:"/".concat(Te,"/SurfaceD3")},"SurfaceD3")),r.a.createElement("div",null,r.a.createElement(Ve,{to:"/".concat(Te,"/SurfaceShader")},"SurfaceShader")),r.a.createElement("div",null,r.a.createElement(Ve,{to:"/".concat(Te,"/TestShader")},"TestShader")),r.a.createElement("div",null,r.a.createElement(Ve,{to:"/".concat(Te,"/PlaneGeometry")},"PlaneGeometry")),r.a.createElement("div",null,r.a.createElement(Ve,{to:"/".concat(Te,"/PlaneGeometryShader")},"PlaneGeometryShader")),r.a.createElement("div",null,r.a.createElement(Ne,{href:"https://github.com/renato145/threejs_playground/",target:"_black"},"Source Code"))),r.a.createElement(i.c,null,r.a.createElement(i.a,{exact:!0,path:"/".concat(Te,"/")},r.a.createElement(Je,null,"Threejs playground"),r.a.createElement(Le,null,"Made by: Renato Hermoza, check the"," ",r.a.createElement(Ne,{href:"https://github.com/renato145/threejs_playground/",target:"_black"},"source code"),".")),r.a.createElement(i.a,{path:"/".concat(Te,"/BoxGeometry")},r.a.createElement(j,null)),r.a.createElement(i.a,{path:"/".concat(Te,"/SurfaceD3")},r.a.createElement(Y,null)),r.a.createElement(i.a,{path:"/".concat(Te,"/SurfaceShader")},r.a.createElement(Se,null)),r.a.createElement(i.a,{path:"/".concat(Te,"/TestShader")},r.a.createElement(Pe,null)),r.a.createElement(i.a,{path:"/".concat(Te,"/PlaneGeometry")},r.a.createElement(Fe,null)),r.a.createElement(i.a,{path:"/".concat(Te,"/PlaneGeometryShader")},r.a.createElement(Be,null))))};o.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(qe,null)),document.getElementById("root"))}},[[223,1,2]]]);
//# sourceMappingURL=main.611ac571.chunk.js.map