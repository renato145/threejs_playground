(this.webpackJsonpthree_js_playground=this.webpackJsonpthree_js_playground||[]).push([[0],{201:function(e,t,n){e.exports=n.p+"static/media/texture1.72757f21.png"},226:function(e,t,n){e.exports=n(402)},400:function(e,t,n){},402:function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),o=n(43),c=n.n(o),l=n(30),u=n(122),i=n(51),m=n(31),s=n(8),f=n(9),v=n(27);function b(){var e=Object(l.a)(["\n  color: #fff;\n  font-size: 1.2em;\n  text-align: center;\n  padding-top: 0.5em;\n"]);return b=function(){return e},e}function d(){var e=Object(l.a)(["\n  height: 90vh;\n  width: 100vw;\n  & canvas:focus {\n    outline-width: 0px;\n  }\n"]);return d=function(){return e},e}var h=m.a.div(d()),p=m.a.div(b()),g=function(e){var t=e.text,n=e.children,a=e.xtra,o=e.measure;return r.a.createElement(h,{ref:o},r.a.createElement(f.a,null,r.a.createElement("ambientLight",null),r.a.createElement("pointLight",{position:[10,10,10]}),n,r.a.createElement(v.b,null)),a&&a,t&&r.a.createElement(p,null,t))},y=function(){var e=Object(a.useRef)(),t=Object(a.useState)(!1),n=Object(s.a)(t,2),o=n[0],c=n[1];return Object(f.d)((function(){return e.current.rotation.x=e.current.rotation.y+=.01})),r.a.createElement("mesh",{ref:e,scale:o?[1.5,1.5,1.5]:[1,1,1],onPointerOver:function(){return c(!0)},onPointerOut:function(){return c(!1)}},r.a.createElement("boxBufferGeometry",{attach:"geometry",args:[2,2,2]}),r.a.createElement("meshStandardMaterial",{attach:"material",color:o?"hotpink":"orange"}),r.a.createElement(v.a,null))},x=function(){return r.a.createElement(g,{text:"Simple box geometry with hover event."},r.a.createElement(y,null))},E=n(0),j=n(20),O=101,_=function(e,t){for(var n=t*e,a=new Array(t*e),r=new Array(t*e),o=new Array(t*e),c=0,l=0;c<e;++c)for(var u=0;u<t;++u,++l)r[l]=u,o[l]=25*Math.sin(u*Math.PI/50)+c,a[l]=Math.pow(r[l]-50,2)+Math.pow(o[l]-50,2);return{xgrid:r,ygrid:o,values:a,nverts:n}}(101,O),w=_.xgrid,S=_.ygrid,M=_.values,z=_.nverts,A=Object(j.b)(w),F=Object(s.a)(A,2),P=F[0],U=F[1],C=.5*(P+U),G=U-P,k=Object(j.b)(S),B=Object(s.a)(k,2),T=B[0],R=B[1],D=.5*(T+R),V=R-T,I=Object(j.b)(M),N=Object(s.a)(I,2),L=N[0],q=N[1],K=.5*(L+q),H=q-L,J=1.2/Math.max(G,V),W=.5/H,X=Object(j.d)().domain(Object(j.b)(M)).interpolate((function(){return j.c})),Q=function(){var e=Object(a.useMemo)((function(){for(var e=[],t=[],n=0;n<z;n++){e.push((w[n]-C)*J),e.push((S[n]-D)*J),e.push((M[n]-K)*W);var a=Object(j.a)(X(M[n]));t.push(a.r/255,a.g/255,a.b/255)}return[new Float32Array(e),new Float32Array(t)]}),[]),t=Object(s.a)(e,2),n=t[0],o=t[1],c=Object(a.useMemo)((function(){for(var e=[],t=0;t<100;t++)for(var n=0;n<100;n++){var a=t*O+n,r=a+1,o=(t+1)*O+n+1,c=o-1;e.push(a,r,o),e.push(o,c,a)}return new Uint16Array(e)}),[]);return r.a.createElement("mesh",{"rotation-x":-Math.PI/2,scale:[4,4,4]},r.a.createElement("bufferGeometry",{attach:"geometry",onUpdate:function(e){console.log(e),e.computeFaceNormals(),e.computeVertexNormals()}},r.a.createElement("bufferAttribute",{attachObject:["attributes","position"],count:n.length/3,array:n,itemSize:3}),r.a.createElement("bufferAttribute",{attachObject:["attributes","color"],count:o.length/3,array:o,itemSize:3}),r.a.createElement("bufferAttribute",{attach:"index",count:c.length,array:c,itemSize:1})),r.a.createElement("meshPhongMaterial",{attach:"material",side:E.DoubleSide,vertexColors:!0}),r.a.createElement(v.a,null))},Y=function(){return r.a.createElement(g,{text:"Surface plot using vertex and faces, colored with d3."},r.a.createElement(Q,null))},Z=function(e,t){for(var n=t*e,a=new Array(t*e),r=new Array(t*e),o=new Array(t*e),c=0,l=0;c<e;++c)for(var u=0;u<t;++u,++l)r[l]=u,o[l]=25*Math.sin(u*Math.PI/50)+c,a[l]=Math.pow(r[l]-50,2)+Math.pow(o[l]-50,2);return{xgrid:r,ygrid:o,values:a,nverts:n}}(101,101),$=Z.xgrid,ee=Z.ygrid,te=Z.values,ne=Z.nverts,ae=Object(j.b)($),re=Object(s.a)(ae,2),oe=re[0],ce=re[1],le=.5*(oe+ce),ue=ce-oe,ie=Object(j.b)(ee),me=Object(s.a)(ie,2),se=me[0],fe=me[1],ve=.5*(se+fe),be=fe-se,de=Object(j.b)(te),he=Object(s.a)(de,2),pe=he[0],ge=he[1],ye=.5*(pe+ge),xe=ge-pe,Ee=1.2/Math.max(ue,be),je=.5/xe,Oe=Object(j.d)().domain(Object(j.b)(te)).interpolate((function(){return j.c})),_e=function(){var e=Object(a.useMemo)((function(){for(var e=[],t=[],n=0;n<ne;n++){e.push(($[n]-le)*Ee),e.push((ee[n]-ve)*Ee),e.push((te[n]-ye)*je);var a=Object(j.a)(Oe(te[n]));t.push(a.r/255,a.g/255,a.b/255)}return[new Float32Array(e),new Float32Array(t)]}),[]),t=Object(s.a)(e,2),n=t[0],o=t[1],c=Object(a.useMemo)((function(){for(var e=[],t=0;t<100;t++)for(var n=0;n<100;n++){var a=101*t+n,r=a+1,o=101*(t+1)+n+1,c=o-1;e.push(a,r,o),e.push(o,c,a)}return new Uint16Array(e)}),[]),l=Object(a.useMemo)((function(){return{vertexShader:"\n  varying float z;\n\n  void main() {\n    vec3 pos = position;\n    z = 0.41 + pos.z*1.5;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n  }\n",fragmentShader:"\n  varying float z;\n  \n  void main() {\n    gl_FragColor = vec4(z, cos(z*200.0), cos(z*100.0), 1.0);\n  }\n"}}),[]);return r.a.createElement("mesh",{"rotation-x":-Math.PI/2,scale:[4,4,4]},r.a.createElement("bufferGeometry",{attach:"geometry",onUpdate:function(e){console.log(e),e.computeFaceNormals(),e.computeVertexNormals()}},r.a.createElement("bufferAttribute",{attachObject:["attributes","position"],count:n.length/3,array:n,itemSize:3}),r.a.createElement("bufferAttribute",{attachObject:["attributes","color"],count:o.length/3,array:o,itemSize:3}),r.a.createElement("bufferAttribute",{attach:"index",count:c.length,array:c,itemSize:1})),r.a.createElement("shaderMaterial",Object.assign({attach:"material"},l,{side:E.DoubleSide})),r.a.createElement(v.a,null))},we=function(){return r.a.createElement(g,{text:"Surface plot using vertex and faces, colored with a custom fragment shader."},r.a.createElement(_e,null))},Se=n(21),Me=function(){var e=Object(a.useRef)(),t=Object(a.useRef)(),n=Object(a.useMemo)((function(){return{vertexShader:"\n  attribute float displacement;\n  varying float z;\n\n  void main() {\n    vec3 pos = position;\n    z = pos.z;\n    pos.x += (displacement/1.0);\n    // pos.y += cos(displacement/2.0);\n    // pos.y += fract(displacement/2.0);\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n  }\n",fragmentShader:"\n  uniform float delta;\n  varying float z;\n  \n  void main() {\n    gl_FragColor = vec4(z*0.5, 0.5 + cos(delta)*0.25, sin(delta), 1.0);\n  }\n",uniforms:{delta:{value:0}}}}),[]),o=Object(a.useState)(),c=Object(s.a)(o,2),l=c[0],u=c[1],i=Object(a.useCallback)((function(e){if(!l){var t=e.attributes.position.count,n=new Float32Array(t);u(n)}}),[l]),m=Object(Se.b)("Color speed",{type:"number",value:.1,max:10}),b=Object(Se.b)("Distortion lvl",{type:"number",value:0,max:1});return Object(f.d)((function(){e.current.rotation.x=e.current.rotation.y+=.01,n.uniforms.delta.value+=m;for(var a=0;a<l.length;a++)l[a]=Math.random()*b;t.current.attributes.displacement.needsUpdate=!0})),r.a.createElement("mesh",{ref:e},r.a.createElement("boxBufferGeometry",{ref:t,attach:"geometry",args:[3,3,3],onUpdate:function(e){return i(e)}},l&&r.a.createElement("bufferAttribute",{attachObject:["attributes","displacement"],count:l.length,array:l,itemSize:1})),r.a.createElement("shaderMaterial",Object.assign({attach:"material"},n)),r.a.createElement(v.a,null))},ze=function(){return r.a.createElement(g,{text:"Testing the use of shaders.",xtra:r.a.createElement(Se.a,null)},r.a.createElement(Me,null))},Ae=n(23),Fe=function(){var e=Object(a.useRef)(),t=Object(Se.b)("width",{type:"number",value:5,min:1,max:10}),n=Object(Se.b)("height",{type:"number",value:5,min:1,max:10}),o=Object(Se.b)("width segments",{type:"number",value:10,min:2,max:100}),c=Object(Se.b)("height segments",{type:"number",value:10,min:2,max:100}),l=Object(Se.b)("max elevation",{type:"number",value:.25,min:0,max:2}),u=Object(Se.b)("wireframe",{type:"boolean",value:!1}),i=Object(a.useState)([]),m=Object(s.a)(i,2),f=m[0],b=m[1],d=Object(a.useCallback)((function(e){for(var t=e.attributes.position.array,n=0;n<t.length;n++)n%3===2&&(t[n]=Math.random()*l);if(f&&f.length===t.length)e.setAttribute("color",new E.Float32BufferAttribute(f,3));else{var a=Object(Ae.a)(t.filter((function(e,t){return t%3===2}))),r=Object(j.d)().domain(Object(j.b)(a)).interpolate((function(){return j.c})),o=[];a.forEach((function(e){var t=Object(j.a)(r(e));o.push(t.r/255,t.g/255,t.b/255)})),b((function(){return e.setAttribute("color",new E.Float32BufferAttribute(o,3)),o}))}}),[f,l]);return Object(a.useEffect)((function(){d(e.current),e.current.attributes.position.needsUpdate=!0}),[l,d]),r.a.createElement("mesh",{"rotation-x":-Math.PI/2,"position-y":-1.5},r.a.createElement("planeBufferGeometry",{ref:e,attach:"geometry",args:[t,n,o,c],onUpdate:function(e){return d(e)}}),r.a.createElement("meshPhongMaterial",{attach:"material",side:E.DoubleSide,wireframe:u,vertexColors:!0}),r.a.createElement(v.a,null))},Pe=function(){return r.a.createElement(g,{text:"Using a plane buffer geometry to show a surface plot, with colors given by d3.",xtra:r.a.createElement(Se.a,null)},r.a.createElement(Fe,null))},Ue=function(){var e=Object(a.useRef)(),t=Object(Se.b)("width",{type:"number",value:5,min:1,max:10}),n=Object(Se.b)("height",{type:"number",value:5,min:1,max:10}),o=Object(Se.b)("width segments",{type:"number",value:10,min:2,max:100}),c=Object(Se.b)("height segments",{type:"number",value:10,min:2,max:100}),l=Object(Se.b)("max elevation",{type:"number",value:.35,min:0,max:2}),u=Object(Se.b)("wireframe",{type:"boolean",value:!1}),i=Object(a.useCallback)((function(e){for(var t=e.attributes.position.array,n=0;n<t.length;n++)n%3===2&&(t[n]=Math.random()*l)}),[l]);Object(a.useEffect)((function(){i(e.current),e.current.attributes.position.needsUpdate=!0}),[l,i]);var m=Object(a.useMemo)((function(){return{vertexShader:"\n  varying float z;\n\n  void main() {\n    vec3 pos = position;\n    z = pos.z;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n  }\n",fragmentShader:"\n  varying float z;\n  \n  void main() {\n    gl_FragColor = vec4(z, 0.1, 0.3, 1.0);\n  }\n"}}),[]);return r.a.createElement("mesh",{"rotation-x":-Math.PI/2,"position-y":-1.5},r.a.createElement("planeBufferGeometry",{ref:e,attach:"geometry",args:[t,n,o,c],onUpdate:function(e){return i(e)}}),r.a.createElement("shaderMaterial",Object.assign({attach:"material"},m,{side:E.DoubleSide,wireframe:u})),r.a.createElement(v.a,null))},Ce=function(){return r.a.createElement(g,{text:"Using a plane buffer geometry to show a surface plot, with colors given by a fragment shader.",xtra:r.a.createElement(Se.a,null)},r.a.createElement(Ue,null))},Ge=n(40),ke=n(42),Be=function(e){var t=e.bounds,n=Object(f.f)().mouse,o=Object(a.useMemo)((function(){return{vertexShader:"\n  void main() {\n    gl_Position = vec4( position, 1.0 );\n  }\n",fragmentShader:"\n  uniform float u_time;\n  uniform vec2 u_resolution;\n  uniform vec2 u_mouse;\n\n\n  void main() {\n    vec2 st = gl_FragCoord.xy/u_resolution.xy;\n    st.y += sin(u_time) * 0.05;\n    vec2 mouse = (u_mouse + 1.0) / 2.0;\n    gl_FragColor=vec4(st.x, st.y, (mouse.x + mouse.y) / 2.0, 1.0);\n  }\n",uniforms:{u_time:{value:0},u_resolution:{value:new E.Vector2},u_mouse:{value:n}}}}),[n]);return Object(a.useEffect)((function(){o.uniforms.u_resolution.value.x=t.width,o.uniforms.u_resolution.value.y=t.height}),[t,o]),Object(f.d)((function(){o.uniforms.u_time.value+=.05})),r.a.createElement("mesh",null,r.a.createElement("planeBufferGeometry",{attach:"geometry",args:[2,2]}),r.a.createElement("shaderMaterial",Object.assign({attach:"material"},o)))},Te=function(){var e=Object(Ge.a)({polyfill:ke.a}),t=Object(s.a)(e,2),n=t[0],a=t[1];return r.a.createElement(g,{text:"Basic template to play with shaders.",measure:n},r.a.createElement(Be,{bounds:a}))},Re=function(e){var t=e.bounds,n=Object(f.f)().mouse,o=Object(a.useMemo)((function(){return{vertexShader:"\n  void main() {\n    gl_Position = vec4( position, 1.0 );\n  }\n",fragmentShader:"\n  uniform float u_time;\n  uniform vec2 u_resolution;\n  uniform vec2 u_mouse;\n\n  void main() {\n    vec2 st = gl_FragCoord.xy/u_resolution.xy;\n    vec3 color = vec3(0.0);\n    vec2 mouse = u_mouse;\n\n    // Borders\n    // vec2 bl = smoothstep(0.05, 0.5, st);\n    // float pct = bl.x * bl.y;\n    // vec2 tr = step(0.05, 1.0 - st);\n    // pct *= tr.x * tr.y;\n    // color = vec3(pct);\n\n    // Circle\n    // float pct = distance(st, vec2(0.5));\n    // color = vec3(pct);\n\n    // Repeating circles\n    float d = 0.0;\n    st = st * 2. - 1.; // normalize between 0-1\n    st.x -= mouse.x;\n    // st.y -= mouse.y;\n    st.y = step(1.0, st.y);\n    // st.y = smoothstep(-1.0, 1.0, st.y);\n    d = length( abs(st) - sin(u_time/20.0) );\n    color = vec3(st.x, st.y + mouse.y*0.25, 0.0);\n    color.b += (mouse.x + 1.0) / 2.0 * 0.35;\n    color += fract(d*12.0);\n\n    gl_FragColor=vec4(color, 1.0);\n  }\n",uniforms:{u_time:{value:0},u_resolution:{value:new E.Vector2},u_mouse:{value:n}}}}),[n]);return Object(a.useEffect)((function(){o.uniforms.u_resolution.value.x=t.width,o.uniforms.u_resolution.value.y=t.height}),[t,o]),Object(f.d)((function(){o.uniforms.u_time.value+=.05})),r.a.createElement("mesh",null,r.a.createElement("planeBufferGeometry",{attach:"geometry",args:[2,2]}),r.a.createElement("shaderMaterial",Object.assign({attach:"material"},o)))},De=function(){var e=Object(Ge.a)({polyfill:ke.a}),t=Object(s.a)(e,2),n=t[0],a=t[1];return r.a.createElement(g,{text:"Playing with shapes on shaders.",measure:n},r.a.createElement(Re,{bounds:a}))},Ve=function(e){var t=e.bounds,n=Object(f.f)().mouse,o=Object(a.useMemo)((function(){return{vertexShader:"\n  void main() {\n    gl_Position = vec4( position, 1.0 );\n  }\n",fragmentShader:"\n  uniform float u_time;\n  uniform vec2 u_resolution;\n  uniform vec2 u_mouse;\n\n  const mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\n  float hash( vec2 p ) {\n    float h = dot(p,vec2(127.1,311.7));\n    return -1.0 + 2.0*fract(sin(h)*43758.5453123);\n  }\n\n  float noise( in vec2 p ) {\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                    hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                    hash( i + vec2(1.0,1.0) ), u.x), u.y);\n  }\n\n  float fbm( vec2 p )\n  {\n      float f = 0.0;\n      f += 0.5000*noise( p ); p = m*p*2.02;\n      f += 0.2500*noise( p ); p = m*p*2.03;\n      f += 0.1250*noise( p ); p = m*p*2.01;\n      f += 0.0625*noise( p );\n      return f/0.9375;\n  }\n\n  vec2 fbm2( in vec2 p )\n  {\n      return vec2( fbm(p.xy), fbm(p.yx) );\n  }\n\n  vec3 map( vec2 p )\n  {   \n      p *= 0.7;\n      float t = u_time * ( 1.0 + 2. * distance(u_mouse, vec2(0.0)));\n\n      float f = dot( fbm2( 1.0*(0.05*t + p + fbm2(-0.05*t+2.0*(p + fbm2(4.0*p)))) ), vec2(1.0,-1.0) );\n\n      float bl = smoothstep( -0.8, 0.8, f );\n\n      float ti = smoothstep( -1.0, 1.0, fbm(p) );\n\n      return mix( mix( vec3(0.50,0.00,0.00), \n                       vec3(1.00,0.75,0.35), ti ), \n                       vec3(0.00,0.00,0.02), bl );\n  }\n\n  void main() {\n    vec2 p = (-u_resolution.xy+2.0*gl_FragCoord.xy)/u_resolution.y;\n\n    float e = 0.0045;\n\n    vec3 colc = map( p               ); float gc = dot(colc,vec3(0.433));\n    vec3 cola = map( p + vec2(e,0.0) ); float ga = dot(cola,vec3(0.333));\n    vec3 colb = map( p + vec2(0.0,e) ); float gb = dot(colb,vec3(0.333));\n    \n    vec3 nor = normalize( vec3(ga-gc, e, gb-gc ) );\n\n    vec3 col = colc;\n    col += vec3(1.0,0.7,0.6)*8.0*abs(2.0*gc-ga-gb);\n    col *= 1.0+0.2*nor.y*nor.y;\n    col += 0.05*nor.y*nor.y*nor.y;\n    \n    \n    vec2 q = gl_FragCoord.xy/u_resolution.xy;\n    col *= pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.1);\n    vec2 m = (u_mouse.xy + 1.0 ) / 2.0;\n    col.r *= m.x;\n    col.g *= m.y;\n    \n    gl_FragColor = vec4( col, 1.0 );\n  }\n",uniforms:{u_time:{value:0},u_resolution:{value:new E.Vector2},u_mouse:{value:n}}}}),[n]);return Object(a.useEffect)((function(){o.uniforms.u_resolution.value.x=t.width,o.uniforms.u_resolution.value.y=t.height}),[t,o]),Object(f.d)((function(){o.uniforms.u_time.value+=.05})),r.a.createElement("mesh",null,r.a.createElement("planeBufferGeometry",{attach:"geometry",args:[2,2]}),r.a.createElement("shaderMaterial",Object.assign({attach:"material"},o)))},Ie=function(){return r.a.createElement(p,null,"A more complex test (inspired by"," ",r.a.createElement(ut,{href:"https://www.shadertoy.com/view/MdSXzz",target:"_black"},"this work"),").")},Ne=function(){var e=Object(Ge.a)({polyfill:ke.a}),t=Object(s.a)(e,2),n=t[0],a=t[1];return r.a.createElement(g,{xtra:r.a.createElement(Ie,null),measure:n},r.a.createElement(Ve,{bounds:a}))},Le=n(201),qe=n.n(Le),Ke=n(203);function He(){var e=Object(l.a)(["\n  text-align: center;\n  vertical-align: middle;\n  background-color: #ccc;\n  color: #111;\n  border: 1px solid transparent;\n  padding: 0.175rem 0.75rem;\n  line-height: 1.5;\n  border-radius: 0.25rem;\n  transition: all 0.2s ease-out;\n\n  &:hover {\n    background-color: #666;\n    color: #fff;\n  }\n"]);return He=function(){return e},e}var Je=m.a.button(He()),We=function(e){var t=e.text,n=void 0===t?"Upload Image":t,o=e.handleUpload,c=void 0===o?function(){}:o,l=Object(Ke.a)(e,["text","handleUpload"]),u=Object(a.useRef)();return r.a.createElement("div",l,r.a.createElement("input",{ref:u,type:"file",style:{display:"none"},accept:"image/*",onChange:c}),r.a.createElement(Je,{onClick:function(){return u.current.click()}},n))},Xe=function(e){var t=(new E.TextureLoader).load(e);return t.wrapS=E.RepeatWrapping,t.wrapT=E.RepeatWrapping,t};function Qe(){var e=Object(l.a)(["\n  display: flex;\n  flex-wrap: wrap;\n  flex-flow: row;\n  justify-content: center;\n  padding-top: 0.5rem;\n"]);return Qe=function(){return e},e}var Ye=function(e){var t=e.bounds,n=e.textureUrl,o=Object(f.f)().mouse,c=Object(a.useMemo)((function(){return Xe(qe.a)}),[]),l=Object(a.useMemo)((function(){return{vertexShader:"\n  void main() {\n    gl_Position = vec4( position, 1.0 );\n  }\n",fragmentShader:"\n  uniform float u_time;\n  uniform vec2 u_resolution;\n  uniform vec2 u_mouse;\n  uniform sampler2D u_texture;\n\n  vec2 N(float angle) {\n    return vec2(sin(angle), cos(angle));\n  }\n\n  void main() {\n    vec2 uv = (gl_FragCoord.xy - 0.5*u_resolution) / u_resolution.y;\n    vec2 mouse = (u_mouse + 1.0) / 2.0;\n\n    uv *= 1.5; // zoom \n    vec3 col = vec3(0.0);\n\n    uv.x = abs(uv.x); // reflect x coords\n\n    // shift y coord to center the graph\n    // tan(a) = y / 0.5 -> y = tan(a)*0.5\n    uv.y += tan(5.0/6.0*3.1415) * 0.5;\n\n    // setup a reflection over an angle\n    vec2 n = N(5.0/6.0*3.1415); // reflection angle\n    float d = dot(uv - vec2(0.5, 0.0), n); // vec2 sets the reflection point\n    uv -= max(0.0, d)*n*2.0;\n\n    // col += smoothstep(0.01, 0.0, abs(d)); // a line\n\n    n = N(u_mouse.y * (2.0/3.0) * 3.1415);\n    uv.x += 0.5; // compensates the 1st step on for loop ( + 1.5/3)\n    float scale = 2.0; // track the width of the lines\n\n    for(int i=0; i<10; i++) {\n      scale *= 3.0;\n      uv *= 3.0;\n      uv.x -= 1.5;\n\n      uv.x = abs(uv.x); // reflect x coords\n      uv.x -= 0.5;\n      uv -= min(0.0, dot(uv, n))*n*2.0; // reflection over angle\n      uv *= 0.9 + mouse.x * 0.1;\n    }\n\n    d = length(uv - vec2(clamp(uv.x, -1.0, 1.0), 0.0));\n    col += smoothstep(2.0 / u_resolution.y, 0.0, d/scale);\n    uv /= scale; // normalize\n    col += texture2D(u_texture, uv*2.0 + u_time*0.03).rgb;\n\n    gl_FragColor=vec4(col, 1.0);\n  }\n",uniforms:{u_time:{value:0},u_resolution:{value:new E.Vector2},u_mouse:{value:o},u_texture:{value:c}}}}),[o,c]);return Object(a.useEffect)((function(){n&&(l.uniforms.u_texture.value=Xe(n))}),[n,l]),Object(a.useEffect)((function(){l.uniforms.u_resolution.value.x=t.width,l.uniforms.u_resolution.value.y=t.height}),[t,l]),Object(f.d)((function(){l.uniforms.u_time.value+=.05})),r.a.createElement("mesh",null,r.a.createElement("planeBufferGeometry",{attach:"geometry",args:[2,2]}),r.a.createElement("shaderMaterial",Object.assign({attach:"material"},l)))},Ze=m.a.div(Qe()),$e=function(e){var t=e.handleUpload;return r.a.createElement(Ze,null,r.a.createElement(p,null,"Example of a Koch Snowflake fractal pattern, try a custom pattern:"),r.a.createElement(We,{style:{marginLeft:"0.5em"},text:"Upload texture",handleUpload:t}))},et=function(){var e=Object(Ge.a)({polyfill:ke.a}),t=Object(s.a)(e,2),n=t[0],o=t[1],c=Object(a.useState)(),l=Object(s.a)(c,2),u=l[0],i=l[1];return r.a.createElement(g,{xtra:r.a.createElement($e,{handleUpload:function(e){var t=URL.createObjectURL(e.target.files[0]);i(t)}}),measure:n},r.a.createElement(Ye,{bounds:o,textureUrl:u}))};n(400);function tt(){var e=Object(l.a)(["\n  color: #fff;\n  font-size: 1.2em;\n  text-align: center;\n  padding-top: 3em;\n"]);return tt=function(){return e},e}function nt(){var e=Object(l.a)(["\n  color: #fff;\n  font-size: 2em;\n  text-align: center;\n  padding-top: 2em;\n"]);return nt=function(){return e},e}function at(){var e=Object(l.a)(["\n  position: absolute;\n  display: flex;\n  flex-wrap: wrap;\n  flex-flow: column;\n  justify-content: space-between;\n  margin-top: 3rem;\n  padding: 1em 1em;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 100;\n\n  & > div {\n    padding-bottom: 0.5rem;\n  }\n"]);return at=function(){return e},e}function rt(){var e=Object(l.a)(["\n  color: #abc;\n  font-size: 1rem;\n  &.active {\n    color: #fff;\n  }\n"]);return rt=function(){return e},e}function ot(){var e=Object(l.a)(["\n  color: #abc;\n  font-size: 1rem;\n  &.active {\n    color: #fff;\n  }\n"]);return ot=function(){return e},e}var ct="threejs_playground",lt=Object(m.a)(u.b).attrs((function(e){return{exact:!0}}))(ot()),ut=m.a.a(rt()),it=m.a.div(at()),mt=m.a.div(nt()),st=m.a.div(tt()),ft=function(){return r.a.createElement(u.a,null,r.a.createElement(it,null,r.a.createElement("div",null,r.a.createElement(lt,{to:"/".concat(ct,"/")},"Home")),r.a.createElement("div",null,r.a.createElement(lt,{to:"/".concat(ct,"/BoxGeometry")},"BoxGeometry")),r.a.createElement("div",null,r.a.createElement(lt,{to:"/".concat(ct,"/SurfaceD3")},"SurfaceD3")),r.a.createElement("div",null,r.a.createElement(lt,{to:"/".concat(ct,"/SurfaceShader")},"SurfaceShader")),r.a.createElement("div",null,r.a.createElement(lt,{to:"/".concat(ct,"/TestShader")},"TestShader")),r.a.createElement("div",null,r.a.createElement(lt,{to:"/".concat(ct,"/PlaneGeometry")},"PlaneGeometry")),r.a.createElement("div",null,r.a.createElement(lt,{to:"/".concat(ct,"/PlaneGeometryShader")},"PlaneGeometryShader")),r.a.createElement("div",null,r.a.createElement(lt,{to:"/".concat(ct,"/ShaderTemplate")},"ShaderTemplate")),r.a.createElement("div",null,r.a.createElement(lt,{to:"/".concat(ct,"/ShaderShapes")},"ShaderShapes")),r.a.createElement("div",null,r.a.createElement(lt,{to:"/".concat(ct,"/ShaderTexture")},"ShaderTexture")),r.a.createElement("div",null,r.a.createElement(lt,{to:"/".concat(ct,"/FractalKoch")},"FractalKoch")),r.a.createElement("div",null,r.a.createElement(ut,{href:"https://github.com/renato145/threejs_playground/",target:"_black"},"Source Code"))),r.a.createElement(i.c,null,r.a.createElement(i.a,{exact:!0,path:"/".concat(ct,"/")},r.a.createElement(mt,null,"Threejs playground"),r.a.createElement(st,null,"Made by: Renato Hermoza, check the"," ",r.a.createElement(ut,{href:"https://github.com/renato145/threejs_playground/",target:"_black"},"source code"),".")),r.a.createElement(i.a,{path:"/".concat(ct,"/BoxGeometry")},r.a.createElement(x,null)),r.a.createElement(i.a,{path:"/".concat(ct,"/SurfaceD3")},r.a.createElement(Y,null)),r.a.createElement(i.a,{path:"/".concat(ct,"/SurfaceShader")},r.a.createElement(we,null)),r.a.createElement(i.a,{path:"/".concat(ct,"/TestShader")},r.a.createElement(ze,null)),r.a.createElement(i.a,{path:"/".concat(ct,"/PlaneGeometry")},r.a.createElement(Pe,null)),r.a.createElement(i.a,{path:"/".concat(ct,"/PlaneGeometryShader")},r.a.createElement(Ce,null)),r.a.createElement(i.a,{path:"/".concat(ct,"/ShaderTemplate")},r.a.createElement(Te,null)),r.a.createElement(i.a,{path:"/".concat(ct,"/ShaderShapes")},r.a.createElement(De,null)),r.a.createElement(i.a,{path:"/".concat(ct,"/ShaderTexture")},r.a.createElement(Ne,null)),r.a.createElement(i.a,{path:"/".concat(ct,"/FractalKoch")},r.a.createElement(et,null))))};c.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(ft,null)),document.getElementById("root"))}},[[226,1,2]]]);
//# sourceMappingURL=main.276d4ef4.chunk.js.map